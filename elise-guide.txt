Creating Electron Project

- npm init
- npm install --save-dev electron

Ex. 
{
  "name": "my-electron-app",
  "version": "1.0.0",
  "description": "Hello World!",
  "main": "./public/src/js/main.js",
  "author": "Allen Charls Casul",
  "license": "MIT"
}

-----------------------------------------------------------

{
  "scripts": {
    "test": "electron ."
  }
}

-----------------------------------------------------------

- ./public/src/js/main.js

// Modules to control application life and create native browser window
const { app, BrowserWindow } = require('electron')

// Create the browser window.
const createWindow = () => {
    const win = new BrowserWindow({
        width: 1220,
        height: 700,
        frame: true,
        autoHideMenuBar: false,
        nodeIntegration: true,
        devTools: true,
        icon: './public/assets/icon/electron.ico'
    })
    // Loading the index.html of the app.
    win.loadFile('./app/index.html')
}

// Initialization and is ready to create browser windows.
app.whenReady().then(() => {
    createWindow()
})

// Quit when all windows are closed,
app.on('window-all-closed', () => {
    if (process.platform !== 'darwin') {
        app.quit()
    }
})
-----------------------------------------------------------

Bundling Source Code into an .exe file

- npm i --save-dev electron-builder

  "scripts": {
    "test": "electron .",
    "build": "electron-builder"
  },

then add this jason data:

"build": {
    "appId": "Electron",
    "win": {
      "target": [
        "nsis"
      ],
      "icon": "./public/assets/icon/electron.ico"
    },
    "nsis": {
      "oneClick": false,
      "installerIcon": "./public/assets/icon/electron.ico",
      "uninstallerIcon": "./public/assets/icon/electron.ico",
      "uninstallDisplayName": "Electron-uninstaller",
      "license": "license.md",
      "allowToChangeInstallationDirectory": false
    }
  },

then run this command "npm run build"












































































